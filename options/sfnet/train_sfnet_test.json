{
    "task": "sfnet_test"     // JPEG compression artifact reduction for quality factor 10/20/30/40. root/task/images-models-options
    , "model": "plain" // "plain" | "plain2" if two inputs
    , "gpu_ids": [0,1,2,3,4,5,6,7]
    , "dist": true
    , "n_channels": 3
  
    , "is_color": false // color or grayscale
  
    , "path": {
      "root": "dejpeg"            // "denoising" | "superresolution" | "dejpeg"
      , "pretrained_netG": null      // path of pretrained model. We fine-tune quality=10/20/30 models from quality=40 model, so that `G_optimizer_lr` and `G_scheduler_milestones` can be halved to save time.
      , "pretrained_netE": null      // path of pretrained model
    }
  
    , "datasets": {
      "train": {
        "name": "train_dataset"           // just name
        , "dataset_type": "jpeg"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
        , "dataroot_H": "path/to/trainset"// path of H training dataset. DIV2K (800 training images) + Flickr2K (2650 images) + BSD500 (400 training&testing images) + WED(4744 images) in SwinIR
        , "dataroot_L": null              // path of L training dataset
  
        , "H_size": 126                   // patch_size
        , "quality_factor": 40            //  10 | 20 | 30 | 40.
        , "quality_factor_test": 40       //
        , "is_color": false               //
  
        , "dataloader_shuffle": true
        , "dataloader_num_workers": 2
        , "dataloader_batch_size": 1     // batch size 1 | 16 | 32 | 48 | 64 | 128. Total batch size =1x8=8 in SwinIR
      }
      , "test": {
        "name": "test_dataset"            // just name
        , "dataset_type": "jpeg"         // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch" | "jpeg"
        , "dataroot_H": "path/to/testset"  // path of H testing dataset
        , "dataroot_L": null              // path of L testing dataset
  
        , "quality_factor": 40            //  10 | 20 | 30 | 40.
        , "quality_factor_test": 40       //
        , "is_color": false               //
  
      }
    }
  
    , "netG": {
      "net_type": "sfnet"
      , "init_type": "default"
    }
  
    , "train": {
      "G_lossfn_type": "charbonnier"      // "l1" | "l2sum" | "l2" | "ssim" | "charbonnier" preferred
      , "G_lossfn_weight": 1.0            // default
      , "G_charbonnier_eps": 1e-9
  
      , "E_decay": 0.999                  // Exponential Moving Average for netG: set 0 to disable; default setting 0.999
  
      , "G_optimizer_type": "adam"        // fixed, adam is enough
      , "G_optimizer_lr": 2e-4            // learning rate
      , "G_optimizer_wd": 0               // weight decay, default 0
      , "G_optimizer_clipgrad": null      // unused
      , "G_optimizer_reuse": true         // 
  
      , "G_scheduler_type": "MultiStepLR" // "MultiStepLR" is enough
      , "G_scheduler_milestones": [200000, 300000, 350000, 370000, 380000]
      , "G_scheduler_gamma": 0.5
  
      , "G_regularizer_orthstep": null    // unused
      , "G_regularizer_clipstep": null    // unused
  
      , "G_param_strict": true
      , "E_param_strict": true
  
      , "checkpoint_test": 10000           // for testing
      , "checkpoint_save": 10000           // for saving model
      , "checkpoint_print": 200           // for print
    }
  }
  
